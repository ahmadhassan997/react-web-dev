{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/leaders.js","redux/comments.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","CardImgOverlay","Menu","menu","dishes","map","Breadcrumb","BreadcrumbItem","active","RenderLeader","Media","tag","top","left","object","body","heading","About","leaders","key","CardHeader","title","list","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","postComment","dishId","rating","author","comment","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","size","offset","check","checkbox","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","commentsFailed","errmess","payload","addComments","dishesFailed","addDishes","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Leaders","Comments","concat","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29f08575.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport {Card, CardImg, CardBody, CardText, CardTitle, CardSubtitle} from 'reactstrap'\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess} </h4>\n        );\n    }\n    else {\n        return (\n            <FadeTransform in\n                transformProps = {{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }} >\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess} \n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} \n                        isLoading={props.promosLoading}\n                        errMess={props.promosErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} \n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport {Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({dish}) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl +  dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess} </h4>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem> <Link to='/home'>Home</Link> </BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n\n}\n\n\nexport default Menu;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({leader}) {\n    return (\n        <Fade in>\n            <Media tag=\"li\">\n                <Media top left>\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\n                </Media>\n                <Media body className=\"ml-5\">\n                    <Media heading>{leader.name} </Media>\n                    <p> {leader.designation} </p>\n                    <p> {leader.description} </p>\n                </Media>\n            </Media>\n        </Fade>\n    );\n}\n\nfunction About(props) {\n\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <div key={leader.id} className=\"col-12 mt-4\">\n                <RenderLeader leader={leader} />\n            </div>\n        );\n    });\n\n    if (props.leaders.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.leaders.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.leaders.errMess} </h4>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            <Stagger in>\n                                {leaders}\n                            </Stagger>\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport {Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\n    Button, Modal, ModalBody, ModalHeader, Label, Row, Col} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    \n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n                </Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col>\n                                    <Control.select model=\".rating\" name=\"rating\"\n                                            className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                                <Col>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                            placeholder=\"Your Name\"\n                                            className=\"form-control\" \n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }} />\n                                    <Errors className=\"text-danger\" show=\"touched\" model=\".author\"\n                                            messages = {{\n                                                required: 'Required',\n                                                minLength: 'Must be 3 characters or more',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }} />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                            rows=\"6\"\n                                            className=\"form-control\" />\n                                </Col>\n                            </Row>\n\n                            <Row className=\"form-group\">\n                                <Col>\n                                <Button type=\"submit\" color=\"primary\">Submit</Button>\n                                </Col>\n                            </Row>\n\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\n    function RenderDish({dish}) {\n\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <FadeTransform in\n                    transformProps = {{\n                        exitTransform: 'scale(0.5) translateY(-50%)'\n                    }} >\n                    <Card>\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                        <CardBody>\n                            <CardTitle>{dish.name} </CardTitle>\n                            <CardText>{dish.description} </CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n        \n    }\n\n    function RenderComments ({comments, postComment, dishId}) {\n\n        let list = comments.map((comment) => {\n            return (\n                <Fade in>\n                    <li key={comment.id}>\n                        \n                        <p>{comment.comment} </p>\n                        <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\n    \n                    </li>\n                </Fade>\n            );\n        });\n\n        return (\n            <div className=\"col-12 col-md-5 m-1\">\n                <div>\n                    <h4>Comments</h4>\n                    <ul className=\"list-unstyled\">\n                        <Stagger in>\n                            {list}\n                        </Stagger>\n                    </ul>\n                    <CommentForm dishId={dishId} postComment={postComment} />                    \n                </div>\n            </div>\n        );\n    \n    }\n\n    const Dishdetail = (props) => {\n        \n        if (props.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.errMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{props.errMess} </h4>\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dish != null) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem> <Link to='/menu'>Menu</Link> </BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name} </BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name} </h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        < RenderDish dish={props.dish} />\n                        < RenderComments comments={props.comments} \n                            postComment={props.postComment} \n                            dishId={props.dish.id} />\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div></div>\n            );\n        }\n    }\n\nexport default Dishdetail;","import React, {Component} from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return(\n            <div className=\"container\">\n    \n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem> <Link to='/home'>Home</Link> </BreadcrumbItem>\n                        <BreadcrumbItem active>Contact US</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n    \n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"#top\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send Us Your Feedback</h3>\n                        <div className=\"col-12 col-md-9\">\n                            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                                                placeholder=\"First Name\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                                }}\n                                                 />\n                                        <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    minLength: 'Must be greater than 2 characters',\n                                                    maxLength: 'Must be less than 15 characters'\n                                                }} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \n                                                placeholder=\"Last Name\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\n                                                }}\n                                                 />\n                                        <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    minLength: 'Must be greater than 2 characters',\n                                                    maxLength: 'Must be less than 15 characters'\n                                                }} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \n                                                placeholder=\"Tel. Number\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required, minLength: minLength(3), maxLength: maxLength(15),\n                                                    isNumber\n                                                }}\n                                                 />\n                                        <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    minLength: 'Must be greater than 2 numbers',\n                                                    maxLength: 'Must be less than 15 numbers',\n                                                    isNumber: 'Must be a number'\n                                                }} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" \n                                                placeholder=\"Email\"\n                                                className=\"form-control\"\n                                                validators={{\n                                                    required, validEmail\n                                                }}\n                                                 />\n                                        <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\n                                                messages={{\n                                                    required: 'Required',\n                                                    validEmail: 'Invalid email address'\n                                                }} />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Col md={{size: 6, offset: 2}}>\n                                        <div className=\"form-check\">\n                                            <Label check>\n                                                <Control.checkbox model=\".agree\" name=\"agree\"\n                                                    className=\"form-check-input\" /> {' '}\n                                                    <strong>May we contact you?</strong>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                    <Col md={{size: 3, offset: 1}}>\n                                        <Control.select model=\".contactType\" name=\"contactType\"\n                                                className=\"form-control\">\n                                                <option>Tel.</option>\n                                                <option>Email</option> \n                                        </Control.select>\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"message\" md={2}>Feedback</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\" \n                                                rows=\"12\"\n                                                className=\"form-control\" />\n                                    </Col>\n                                </Row>\n\n                                <Row className=\"form-group\">\n                                    <Col md={{size:10, offset: 2}}>\n                                        <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                    </Col>\n                                </Row>\n\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n    \n            </div>\n        );\n    } \n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport {Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n     Button, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"username: \" + this.username.value + \" Password: \" + this.password.value + \n                \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"> \n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                                alt=\"Ristronate Con Fusion\" />\n                        </NavbarBrand>\n\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n\n                                <h1>Ristornate Con Fusion</h1>\n                                <p>We take inspiration  from the World's best cuisines, and create fusion experience. Our lipsmacking creations tickle your culinary senses!</p>\n\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                        innerRef={(input) => this.username = input} />\n                            </FormGroup>\n\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" \n                                        innerRef={(input) => this.remember = input}/>\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n\n                        </Form>\n                    </ModalBody>\n                </Modal>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Footer(props) {\n\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n/** Action Creaters for Comments */\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n        })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {console.log('Post comments : ', error.message);\n            alert('Your Comment could not be posted\\nError: ' + error.message); })\n}\n\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n/** Action Creaters for Dishes */\n\n// fetchDishes is a thunk because it is going to\n// be returning an inner function. This function first tries\n// to fetch the dishes by first setting isLoading to True so\n// that spinner can be displayed and after a period of time\n// when the dishes are fetched it will add it into application\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n/** Action Creators for Promotions */\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n/** Action Creators for Promotions */\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\n/** Action Creators for feedback */\n\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname   : firstname,\n        lastname    : lastname,\n        telnum      : telnum,\n        email       : email,\n        agree       : agree,\n        contactType : contactType,\n        message     : message\n    }\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n        })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => alert('Thank you for your feedback!\\n' + JSON.stringify(response)))\n        .catch(error => {console.log('Post feedback : ', error.message);\n            alert('Your feedback could not be added\\nError: ' + error.message); })\n}\n","export const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED  = 'DISHES_FAILED';\nexport const ADD_DISHES     = 'ADD_DISHES';\n\nexport const ADD_COMMENT    = 'ADD_COMMENT';\nexport const ADD_COMMENTS   = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED= 'COMMENTS_FAILED';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS     = 'ADD_PROMOS';\nexport const PROMOS_FAILED  = 'PROMOS_FAILED';\n\nexport const ADD_LEADERS    = 'ADD_LEADER';\nexport const LEADERS_LOADING= 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport About from './AboutComponent';\nimport Dishdetail from './DishdetailComponent';\nimport Contact from './ContactComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { postFeedback, postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  // add dispatch to handle actions\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)), // passing this to Dishdetail component\n  fetchDishes: () => {dispatch(fetchDishes())}, // passing this to Home, Dishdetail and Menu component\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))}, // passing this to Contact component\n  fetchComments: () => {dispatch(fetchComments())}, // used in Dishdetail component\n  fetchPromos: () => {dispatch(fetchPromos())}, // used in Home component\n  fetchLeaders: () => {dispatch(fetchLeaders())}, // used in Home and Aboutus component\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)) // passing this to Contact component\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n\n    const HomePage = () => {\n        return (\n            <Home dish={ this.props.dishes.dishes.filter((dish) => dish.featured)[0] }\n                  dishesLoading={this.props.dishes.isLoading}\n                  dishesErrMess={this.props.dishes.errMess}\n                  promotion={ this.props.promotions.promotions.filter((promo) => promo.featured)[0] }\n                  promosLoading={this.props.promotions.isLoading}\n                  promosErrMess={this.props.promotions.errMess}\n                  leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0] }\n                  leadersLoading={this.props.leaders.isLoading}\n                  leadersErrMess={this.props.leaders.errMess}\n            />\n        );\n    }\n\n    const DishWithId = ({match}) => {\n        return (\n            <Dishdetail dish={ this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0] }\n                        isLoading={this.props.dishes.isLoading}\n                        errMess={this.props.dishes.errMess}\n                        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10)) }\n                        commentsErrMess={this.props.comments.errMess}\n                        postComment={this.props.postComment}\n            />\n        );\n    }\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch>\n                <Route path=\"/home\" component={HomePage} />\n                <Route exact path=\"/menu\" component={() => <Menu dishes={ this.props.dishes } />} />\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\n                <Route exact path=\"/aboutus\" component={() => <About leaders={ this.props.leaders } />} />\n                <Route exact path=\"/contactus\" component={() => <Contact \n                                                              resetFeedbackForm={this.props.resetFeedbackForm}\n                                                              postFeedback={this.props.postFeedback} />} />\n                <Redirect to=\"/home\" />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true, // because the dishes is empty here\n        errMess: null, // error message to be passed in case of DISHES_FAILED\n        dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n        isLoading: true,\n        errMess: null,\n        leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n        \n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []};\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname   : '',\n    lastname    : '',\n    telnum      : '',\n    email       : '',\n    agree       : false,\n    contactType : 'Tel.',\n    message     : ''\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Leaders } from './leaders';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                // we provide this feedback so we can reset the form to\n                // its initial state after submiting the form\n                feedback: InitialFeedback \n            })\n        }),\n        // enhancer\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}